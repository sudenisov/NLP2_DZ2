
Цель домашней работы
В рамках данной работы вы отработаете навыки нахождения пригодных данных для обучения, подготовки и фильтрации данных, обучения моделей, их инференса, подбора оптимальных гиперпараметров генерации и валидации качества обученных генеративных моделей.
Формулировка задания
    • Вам предстоит разработать чат-бот, используя генеративный подход. Бот должен вести диалог как определенный персонаж сериала, имитируя стиль и манеру конкретного персонажа сериала. Важно учесть особенности речи и темы, которые поднимает персонаж, его типичные реакции.
    • Данные для обучения и разработки модели вы должны найти самостоятельно. Данные могут быть взяты из открытых источников или собственных наборов данных. Данные могут быть как на русском, так и на английском языке.
Что нужно использовать в работе над заданием
    • Для выполнения задания необходимо найти или спарсить данные с разбивкой по репликам персонажей сериала. Для этого могут подойти транскрипции сериалов.
    • Пример кода для обучения/инференса модели вы можете найти в материалах 4 и 5 недель с семинарских занятий. В качестве сервиса можно реализовать web-сервис с использованием любого фреймворка на Python.
Место, где нужно выполнить задание
Работа выполняется на вашей локальной машине или в Google Colab. Для тренировки модели можно использовать локальный компьютер (ваши результаты должны быть воспроизводимы, поэтому не забывайте про файл requirements.txt) или облачную среду Google Colab.
Ожидаемый результат
В качестве результата домашней работы от вас требуется предоставить:
    • Код для предобработки данных, обучения и инференса модели, оформленный в виде репозитория.
    • Отчет о выполнении задания (формат отчета может быть произвольным), который включает описание использованных данных, архитектуры модели, процесса обучения; и инструкции по запуску бота.
    • Бот должен быть реализован как сервис.
Рекомендация к результату
    • Отчет включает в себя описание данных, процесс подготовки данных, ссылку на github-проект, несколько графиков обучения модели. Графики обучения в идеале сопровождаются комментариями, почему наблюдалось то или иное поведение модели при обучении. Код инференса должен быть понятным и упакованным в отдельный скрипт.
    • Вы должны описать свой итеративный процесс улучшения работы над проектом: с чего начиналось обучение (Baseline) и как вы оценивали, насколько успешно чат-бот отвечает.
Минимально работающая версия
Код обработки и подготовки данных, графики попыток обучения моделей, описания опробованных методов, зафиксированных в отчете (4 балла).
Оценивание
    • Минимальное требование из предыдущего раздела — 4 балла;
    • Код обработки и подготовки данных, графики обученной модели, отчет о выполнении с выводами и графиками — 6 баллов;
    • Все из предыдущего пункта + код инференса модели — 7 баллов;
    • Все из предыдущего пункта + упаковка решения в виде web-сервиса — 9 баллов;
    • Все из предыдущего пункта + работающий в асинхронном режиме сервис — 10 баллов;
    • Модель упакована в web-сервис + применение методов улучшения фактологической связности ответа — 11 баллов;
    • Модель упакована в web-сервис, работающий в асинхронном режиме + применение методов улучшения фактологической связности ответа — 12 баллов.
О дополнительных баллах
Баллы, набранные свыше 10, будут зачтены как дополнительные баллы.
